# @package _global_

defaults:
  - override /tasks/loss_metrics_datamodule: admet

constants:
  task: tbd
  name: finetune_${constants.task}
  wandb:
    name: ${constants.name}
    project: finetuning
    entity: recursion
  seed: 42
  max_epochs: 100
  data_dir: ../data/graphium/admet/${constants.task}
  datacache_path: ../datacache/admet/${constants.task}
  raise_train_error: true

datamodule:
  args:
    batch_size_training: tbd
    dataloading_from: ram
    persistent_workers: true
    num_workers: 1
  
trainer:
  model_checkpoint:
    dirpath: model_checkpoints/admet/mpnn/
    every_n_epochs: 200
  trainer:
    precision: 32
    check_val_every_n_epoch: 1
  early_stopping:
    monitor: loss/val # graph_${constants.task}/mae/val
    min_delta: 0.001
    patience: 10
    mode: min
  accumulate_grad_batches: none
  
predictor:
  optim_kwargs:
    lr: tbd
  # torch_scheduler_kwargs:
  #   step_size: 20
  #   module_type: StepLR


# == Fine-tuning config == 

finetuning:
  task: ${constants.task}
  level: graph
  pretrained_model: tbd
  finetuning_module: gnn

  keep_modules_after_finetuning_module: # optional
    graph_output_nn-graph:
      new_sub_module: ${finetuning.level}
      hidden_dims: tbd
      depth: 2
      out_dim: tbd
    task_heads-pcqm4m_g25:
      new_sub_module: ${constants.task}
      hidden_dims: tbd
      depth: tbd
      last_activation: tbd
      out_dim: 1

  # Training
  # unfreeze_pretrained_depth: tbd
  epoch_unfreeze_all: tbd